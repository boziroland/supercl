class ParticleData {
    int pressure
    float density

    void testClassMethod(int test) {
    }
}

class ParticleData2 extends ParticleData {
    int pressure2
    float density2

    void testClassMethod2(int test) {
    }

    ParticleData testClassMethod3(int test) {
        return ParticleData(3, 3.0)
    }
}

float PI = 3.14159 // this is pi

int calculateDensity(int inputData, float size) {

    int var = 3

    if (5 < var)
    {
        if (c++)
        {
            print("bulbasaur")
        }
    }
    else if (4 > 2)
    {
        print("yadon")
    }
    else
    {
        print("pikachu")
    }

    for (int i = 0; i < 10; i++)
    {

    }

    while (true) {}

    inputData++
    ++inputData
    int a = 5 * 3.0
    ParticleData2 p = ParticleData2(3, 4)
    print(p.density)
    print(p.density2)
    print(p.testClassMethod(5).density2)
    print(p.testClassMethod2(5))
    int data2 = 5
    inputData = inputData * data2

    if (data2 == 5){
        print(p)
        int data3 = 5
        print(data3)
    }
}

/*
    calculates pressure and viscosity force
*/
float calculatePressureAndViscosityForce(int inputData, int size) {
    inputData += size
}

__kernel doSomething(__global float param1, __local  int param2, string param3) {
    calculatePressureAndViscosityForce(
        calculateDensity(inputData, 5),
        calculatePressureAndViscosityForce(inputData, 5)
        )
}